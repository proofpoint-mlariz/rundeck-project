#!/usr/bin/env bash
#/ command: rundeck-project:config: "Update project configuration"
#/ usage: rerun rundeck-project:config  --project <> [ --file <>] [ --format <xml>]  --action <get>  --url <$RUNDECK_URL>  --username <$RUNDECK_USER> [ --password <$RUNDECK_PASSWORD>] [ --apikey <$RUNDECK_APIKEY>] 
#/ rerun-variables: RERUN, RERUN_VERSION, RERUN_MODULES, RERUN_MODULE_DIR
#/ option-variables: PROJECT FILE FORMAT ACTION URL USERNAME PASSWORD APIKEY

set -o errexit -o nounset -o pipefail

. $RERUN_MODULE_DIR/lib/functions.sh config || { 
  echo >&2 "Failed loading function library." ; exit 1 ; 
}

rerun_options_parse "$@"

: ${FORMAT:=plain}
case $FORMAT in
	plain) content_type="text/plain";;
	xml)   content_type="application/xml";;
	json)  content_type="application/json";;
	*) echo >&2 "unsupported format. Specify plain|xml|json"
		exit 2
esac

CURL_OUT=$(mktemp -t curl.out.XXXXXXXXXX)
trap 'rm $CURL_OUT' EXIT; # cleanup on exit


put_action() {
	[[ ! -f "$FILE" ]] && {	
	   	rerun_die 2 "File not found: $FILE"
	}
	if ! http_code=$(rundeck_curl -w "%{http_code}" \
	    -H "Content-Type: $content_type" --data-binary @"$FILE"  \
		-X PUT ${URL}/api/11/project/$PROJECT/config -o $CURL_OUT)
	then
		rerun_die 3 "curl request failed (exit code: $?)"
	fi
    case ${http_code:-} in
    	200) : ;; # success
    	404) rerun_die 1 "Project does not exist: $PROJECT" ;; 
		* ) rerun_die 3 "API error ${http_code}: PUT ${URL}/api/11/project/$PROJECT/config" ;;
	esac
}

get_action() {
	if ! http_code=$(rundeck_curl -w "%{http_code}" -H "Accept: $content_type"\
		-X GET ${URL}/api/11/project/$PROJECT/config -o "$CURL_OUT" 2>/dev/null)
	then
		rerun_die 3 "curl request failed (exit code: $?)"
	fi
	case ${http_code:-} in
		200) : ;; # success
	   	404) rerun_die 1 "project does not exist: $PROJECT" ;; 
		* ) rerun_die 3 "API error ${http_code:-}: GET ${URL}/api/11/project/$PROJECT/config" ;;
	esac    

	cat "$CURL_OUT"
}

#
# Read authentication credentials
#
if [[ -n "${PASSWORD:-}" && -z "${APIKEY:-}" ]]
then
	COOKIES=$(rundeck_login "$URL" "$USERNAME" "$PASSWORD")
	CURLOPTS="$CURLOPTS -c $COOKIES -b $COOKIES"
elif [[ -z "${PASSWORD:-}" && -n "${APIKEY:-}" ]]; then
	CURLOPTS="$CURLOPTS -H X-Rundeck-Auth-Token:$APIKEY"
else
	rerun_die 2 "Either use --username <> --password <> ...or.. --apikey <>"
fi

case $ACTION in
	get) get_action
	;;
	put) put_action
	;;
	*) rerun_die 2 "Unknown action: $ACTION"
	;;
esac

# Done. Exit with last command exit status.
exit $?

