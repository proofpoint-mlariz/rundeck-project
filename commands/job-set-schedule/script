#!/usr/bin/env bash

#/ command: rundeck-project:job-set-schedule: "Update the schedule for the specified job"
#/ usage: rerun rundeck-project:job-set-schedule  --url <${RUNDECK_URL:-}> [ --user <${RUNDECK_USER:=}>] [ --password <${RUNDECK_PASSWORD:=}>] [ --apikey <${RUNDECK_APIKEY:-}>]  --project <>  --job <>  --crontab <> 
#/ rerun-variables: RERUN, RERUN_VERSION, RERUN_MODULES, RERUN_MODULE_DIR
#/ option-variables: URL USERNAME PASSWORD APIKEY PROJECT JOB CRONTAB

. $RERUN_MODULE_DIR/lib/functions.sh job-set-schedule || { 
  echo >&2 "Failed loading function library." ; exit 1 ; 
}

set -o errexit -o nounset -o pipefail

rerun_options_parse "$@"

# Command implementation
# ----------------------

rundeck_authenticate -u "$URL" -U "$USERNAME" -p "${PASSWORD:-}" -k "${APIKEY:-}"


CURL_OUT=$(mktemp -t curl.out.XXXXXXX)
POST_OUT=$(mktemp -t post.out.XXXXXXX)
trap 'rm $CURL_OUT $POST_OUT' EXIT; # cleanup on exit


# Get the job definition.
if ! http_code=$(rundeck_curl -w "%{http_code}" -H "Accept: text/xml"\
		-X GET ${URL}/api/11/job/$JOB -o "$CURL_OUT")
then
	rerun_die 3 "curl request failed (exit code: $?)"
fi

case ${http_code:-} in
	200) : ;; # success
	* ) rerun_die 3 "API error ${http_code:-}: GET ${URL}/api/11/job/$JOB" ;;
esac
# Rewrite the crontab in the schedule element.
xmlstarlet ed \
	-d /joblist/job/schedule \
	-s /joblist/job -t elem -n schedule -v "" \
	-s //schedule -t elem -n "crontab" -v "$CRONTAB" \
	$CURL_OUT > $POST_OUT


# Post the job definition.
# 
: > $CURL_OUT ; # truncate the curl result file to reuse it
if ! http_code=$(rundeck_curl -w "%{http_code}" \
	-H "Accept:application/xml" \
	-H "Content-Type:application/xml" \
	-X POST ${URL}/api/14/project/$PROJECT/jobs/import?dupeOption=update \
	--data-binary @"$POST_OUT" \
	-o "$CURL_OUT")
then
	rerun_die 3 "curl request failed (exit code: $?)"
fi

#cat $CURL_OUT
case ${http_code:-} in
	200) nsuccessful=$(xmlstarlet sel -t -m //succeeded -v @count $CURL_OUT)
		(( $nsuccessful != 1 )) && {
			rerun_die 3 "$(xmlstarlet sel -t -m //error -v . $CURL_OUT|tr '\n' '\t')"
		}
	;; 
	* ) rerun_die 3 "API error ${http_code:-}: POST ${URL}/api/1/project/$PROJECT/jobs/import" ;;
esac
# Done. Exit with last command exit status.
exit $?

